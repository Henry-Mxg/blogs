(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{438:function(v,t,_){"use strict";_.r(t);var e=_(2),o=Object(e.a)({},(function(){var v=this,t=v._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",[v._v("前言")]),v._v(" "),t("p",[v._v("组件封装对于我们前端而言，我觉得是考验一个前端人员技术的达到什么程度的一个评判，比如说我现在仅仅只是一个初级，对于组件封装也只存在一些理论上的知识，在工作中，还是不太敢轻易的进行封装(哭死)")]),v._v(" "),t("p",[v._v("虽然但是，组件封装也并不一定都好，也有一些劣势，请我听一一道来")]),v._v(" "),t("h3",{staticStyle:{color:"red","font-weight":"800"}},[v._v("优")]),v._v(" "),t("p",[v._v("1."),t("span",{staticStyle:{color:"red","font-weight":"800"}},[v._v("可复用性")]),v._v("：组件封装可以将代码逻辑、样式和共嗯那个打包成可复用的单元，方便在不用的项目和页面中重复使用。提高我们的开发效率，减少重复编写相似代码的工作量，用一个词来形容，那就是优雅！")]),v._v(" "),t("p",[v._v("2."),t("span",{staticStyle:{color:"red","font-weight":"800"}},[v._v("可维护性")]),v._v("：通过组件封装，代码的结构更清晰、模块化，使得维护和修改变得更加容易。当需要修改功能或修复bug时，只需要关注单个组件而不是整个应用程序,还是优雅！")]),v._v(" "),t("p",[v._v("3."),t("span",{staticStyle:{color:"red","font-weight":"800"}},[v._v("可扩展性")]),v._v("：组件封装鼓励模块化开发，使得应用程序的不同部分可以独立开发和扩展，这种松耦合的设计使得添加新功能或修改现有的功能变得更加简单，同时降低了代码的风险")]),v._v(" "),t("p",[v._v("4."),t("span",{staticStyle:{color:"red","font-weight":"800"}},[v._v("提高可读性")]),v._v("：通过将代码逻辑封装在组件中，可以提高代码的可读性和可理解性，为啥呢？因为每个组件都有自己的功能和责任，怎么说，是不是很优雅")]),v._v(" "),t("p",[v._v("5."),t("span",{staticStyle:{color:"red","font-weight":"800"}},[v._v("代码复用")]),v._v("：封装的组件可以提供给不同的项目或者团队中使用，促进团队之间的合作，那这就不是单单优雅了，而是hin装逼！")]),v._v(" "),t("h3",{staticStyle:{color:"red","font-weight":"800"}},[v._v("劣")]),v._v(" "),t("p",[v._v("1.封装复杂度：有的时候，封装一个通用的组件可能需要更多的工作和复杂性，因为你要考虑各种的应用场景和需求，这回增加一定的开发时间和工作量")]),v._v(" "),t("p",[v._v("2.学习曲线：就是长！都是经过日积月累慢慢炼成的技能")]),v._v(" "),t("p",[v._v("可能还有，但是我想不起来了，等我想起来或者遇到了再补上")]),v._v(" "),t("h3",[t("strong",[v._v("好！优缺点现在讲完了，接下来就是重头戏了!!")]),t("span",{staticStyle:{color:"red","font-weight":"800"}},[v._v("如何封装一个组件？")])]),v._v(" "),t("p",[v._v("1.确定组件的功能和用途：首先，我会明确组件的功能和用途。这有助于我确定组件应该具备哪些属性、事件和插槽，并且帮助我设计出一个具有良好可重用性的组件。")]),v._v(" "),t("p",[v._v("2.创建组件文件：我会创建一个新的.vue文件来编写组件代码。Vue的单文件组件将模板、JavaScript和样式集成在一个文件中，使得组件的结构更加清晰和可维护。")]),v._v(" "),t("p",[v._v("3.编写模板：在组件文件中，我会编写模板部分，使用Vue的模板语法来描述组件的结构和呈现的内容。我会根据组件的功能和需求，使用Vue的指令、表达式和条件渲染来实现交互和动态展示。")]),v._v(" "),t("p",[v._v("4.定义组件属性和事件：在Vue组件中，我可以通过props来定义组件的属性，以接收外部传入的数据。我会根据组件的功能，确定需要哪些属性，并为它们指定类型和默认值。同时，我也会通过$emit来定义组件的事件，以便与外部组件进行通信。")]),v._v(" "),t("p",[v._v("5.实现组件逻辑：在Vue组件的script标签中，我会编写JavaScript代码来实现组件的逻辑。这包括处理属性和事件，计算属性，监听数据变化等。如果需要使用Vue的生命周期钩子函数，我也会在适当的时候添加相应的代码。")]),v._v(" "),t("p",[v._v("6.样式化组件：最后，我会在组件的style标签中编写样式，为组件添加适当的样式规则。我通常会使用CSS预处理器（如Sass或Less）来提供更灵活和可维护的样式。")]),v._v(" "),t("p",[v._v("7.测试和优化：完成组件的编写后，我会进行测试，确保组件在各种情况下能够正常工作，并且符合预期的功能和外观。如果需要，我会进行性能优化和代码优化，以提高组件的效率和可维护性。")]),v._v(" "),t("p",[v._v("嘿嘿嘿，逻辑呢就是这么个逻辑，其实还是要平常的日积月累并且有牢固的组件通信的知识，并能够完美且优雅的应用到工作中去，才得以慢慢的理解封装组件的精髓！")]),v._v(" "),t("h3",[t("strong",[v._v("补充一点！如果你好不容易封装好的组件，啪！业务变更或者有新的需求，你的组件无法满足，那要怎么办呢？")])]),v._v(" "),t("p",[v._v("别哭，别抱怨，自有解决办法！那就是------重新封装一个呗，哈哈哈哈哈哈哈哈哈哈哈哈·······开玩笑开玩笑，重新封装一个那是迫不得已的方法")]),v._v(" "),t("p",[v._v("首先;你可以尝试修改现有组件，使其能够适应新的需求。这可能涉及到添加、修改或删除属性、事件或方法，以使组件能够处理新的业务逻辑。通过修改现有组件，你可以在保留部分原有代码和功能的同时，满足新的需求，这种情况是最好的了")]),v._v(" "),t("p",[v._v("其次你在考虑重新封装一个组件，可能还有其它更好的办法但是我目前还不清楚，所以等我更了解了，再来更新···········")])])}),[],!1,null,null,null);t.default=o.exports}}]);